# Maintainer: Sven-Hendrik Haase <svenstaro@gmail.com>
# Contributor: bartus <arch-user-repoá˜“bartus.33mail.com>
# Contributor: pingplug <pingplug@foxmail.com>
# Contributor: cornholio <vigo.the.unholy.carpathian@gmail.com>

pkgname=(rapids-cugraph)
_pkgname=cugraph
# _pkgname2=hornet
pkgver=0.15.0a.r340.gbc48a35d
pkgrel=1
pkgdesc="RAPIDS ML"
arch=('x86_64')
url="https://rapids.ai/"
license=('custom')
depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser' 'python-ucx')
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static')
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static' 'hortnet')
# depends=('clang' 'rapids-cudf' 'gcc8' 'cuda' 'cmake' 'nccl' 'python' 'cython' 'libcypher-parser-static' 'gunrock-static')
# source=("${_pkgname}::git+https://github.com/rapidsai/cugraph.git"
source=("${_pkgname}::git+https://github.com/rapidsai/cugraph.git#branch=branch-0.15"
  "CMakeLists.txt.patch" # "error_utils.h.patch" "renumber.cuh.patch"
  "setup.py.patch"
#  "https://raw.githubusercontent.com/hornet-gt/hornet/master/hornet/include/Hornet.hpp"
  )
#  "${_pkgname2}::git+https://github.com/hornet-gt/hornet.git#tag=0.5")

# sha256sums=( 'SKIP')
# sha256sums=('SKIP' 'SKIP')
sha256sums=('SKIP' 'SKIP' 'SKIP')

pkgver() {
    cd cugraph

    local _version
    local _revision
    local _shorthash

    _version="$(git tag | sort -Vr | head -n1 | sed 's/^v//')"

    _revision="$(git rev-list v"${_version}"..HEAD --count)"
    _shorthash="$(git rev-parse --short HEAD)"

    printf '%s.r%s.g%s' "$_version" "$_revision" "$_shorthash"
}


build() {
  cd "${srcdir}"
  patch -p0 < CMakeLists.txt.patch
#  patch -p0 < error_utils.h.patch
#  patch -p0 < renumber.cuh.patch
  patch -p0 < setup.py.patch
  cd "${srcdir}/cugraph"
  git submodule update --init --remote --recursive

#  cd "${srcdir}"/cugraph/cpp/src/ktruss
  cd "${srcdir}"/cugraph/cpp/include/
#  ln -fs "${srcdir}"/Hornet.hpp .
  cd "${srcdir}/cugraph"
  cd cpp
  mkdir -p build
  cd build
  export CC=/usr/bin/gcc-8
  export CXX=/usr/bin/g++-8
  export CUDAHOSTCXX=/usr/bin/g++-8

  export CUDA_HOME=/opt/cuda
  export CUDA_BIN_PATH=$CUDA_HOME
  export GPU_ARCHS=75
   #  -DPARALLEL_LEVEL=6 \
   # -DENABLE_PROTOBUF=ON \
  cmake .. \
    -DCMAKE_CXX_FLAGS="-march=skylake -O3" \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DBUILD_SHARED_LIBS=ON \
    -DGPU_ARCHS=75 \
    -DWITH_UCX=ON \
    -DCMAKE_CXX11_ABI=ON \
                 -DGUNROCK_BUILD_SHARED_LIBS=OFF \
                -DGUNROCK_BUILD_TESTS=OFF

     make  -j6 VERBOSE=1
    # sed -i -e 's/-lpthread -ldl/-lprotobuf -ldl/g' ./CMakeFiles/cugraph++.dir/link.txt
  #  make  VERBOSE=1
  # PARALLEL_LEVEL=4 ./build.sh libcugraph -n

    export LD_LIBRARY_PATH=/usr/lib:/opt/cuda/lib64:/opt/cuda/extras/CUPTI/lib64:/opt/magma/lib
    export CUDA_PATH=/opt/cuda
    export CUDA_HOME=/opt/cuda

    export PATH=/opt/cuda:$PATH
    export CFLAGS='-march=skylake -mtune=native -O3 -pipe -fstack-protector -I/opt/cuda/include'
    export NVCC='/opt/cuda/bin/nvcc'
    export CUB_PATH=/usr
    export LDFLAGS=-L/opt/cuda/lib64

    cd "${srcdir}"/cugraph/python

    PARALLEL=6 python setup.py build_ext --inplace --verbose --library-dir="${srcdir}"/cugraph/cpp/build


}

package_rapids-cugraph() {
  cd "${srcdir}"/cugraph/cpp/build

  make DESTDIR="${pkgdir}" install

  cd "${srcdir}"/cugraph/python
  python setup.py install --single-version-externally-managed  --prefix=/usr --root="${pkgdir}" --optimize=1

  install -Dm644 ${srcdir}/cugraph/LICENSE ${pkgdir}/usr/share/licenses/rapids-cugraph/LICENSE
  rm -rf ${pkgdir}/home
}

# vim:set ts=2 sw=2 et:
